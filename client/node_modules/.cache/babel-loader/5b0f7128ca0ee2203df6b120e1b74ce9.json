{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBrmdLaWI9C7IjAZcLnTc39qq9dCjFkPag\",\n  authDomain: \"crwn-clothing-d5c99.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-d5c99.firebaseio.com\",\n  projectId: \"crwn-clothing-d5c99\",\n  storageBucket: \"crwn-clothing-d5c99.appspot.com\",\n  messagingSenderId: \"61323139886\",\n  appId: \"1:61323139886:web:d3e51466ecd8ef1d0978bf\",\n  measurementId: \"G-LEN80HG00Z\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) {\n    return;\n  }\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n  console.log('snapshot:', snapshot);\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating a user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((aggregate, collection) => {\n    aggregate[collection.title.toLowerCase()] = collection;\n    return aggregate;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/eugene/Desktop/react/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","console","log","exists","displayName","email","createdAt","Date","set","error","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","aggregate","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBrmdLaWI9C7IjAZcLnTc39qq9dCjFkPag\",\n    authDomain: \"crwn-clothing-d5c99.firebaseapp.com\",\n    databaseURL: \"https://crwn-clothing-d5c99.firebaseio.com\",\n    projectId: \"crwn-clothing-d5c99\",\n    storageBucket: \"crwn-clothing-d5c99.appspot.com\",\n    messagingSenderId: \"61323139886\",\n    appId: \"1:61323139886:web:d3e51466ecd8ef1d0978bf\",\n    measurementId: \"G-LEN80HG00Z\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\n    if (!userAuth){\n        return;\n    }\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapshot = await userRef.get();\n    console.log('snapshot:',snapshot);\n\n    if (!snapshot.exists){\n        const {displayName, email} = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('error creating a user', error.message);\n        }\n    }\n\n    return userRef;\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectsToAdd.forEach( obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    })\n\n    return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map( doc => {\n        const {title, items} = doc.data();\n\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        };\n    });\n\n    return transformedCollection.reduce((aggregate, collection) => {\n        aggregate[collection.title.toLowerCase()] = collection;\n        return aggregate;\n    }, { });\n}\n\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}