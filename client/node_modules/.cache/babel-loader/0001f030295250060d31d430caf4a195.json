{"ast":null,"code":"import { gql } from 'apollo-boost';\nimport { addItemToCart, removeItemFromCart, clearItemFromCart, getCartTotal, getCartItemCount } from './cart.utils';\nexport const typeDefs = gql`\n    \n    extend type Item{\n      quantity: Int\n    }\n\n    extend type Mutation {\n      ToggleCartHidden: Boolean!\n      AddItemToCart(item: Item!): [Item]!\n    }\n  `;\nconst GET_CART_HIDDEN = gql`\n    {\n      cartHidden @client\n    }\n  `;\nconst GET_CART_ITEMS = gql`\n  {\n    cartItems @client\n  }\n  `;\nconst GET_ITEM_COUNT = gql`\n  {\n    itemCount @client\n  }\n  `;\nexport const resolvers = {\n  Mutation: {\n    toggleCartHidden: (_root, _args, {\n      cache\n    }) => {\n      const {\n        cartHidden\n      } = cache.readQuery({\n        query: GET_CART_HIDDEN\n      });\n      cache.writeQuery({\n        query: GET_CART_HIDDEN,\n        data: {\n          cartHidden: !cartHidden\n        }\n      });\n      return !cartHidden;\n    },\n    addItemToCart: (_root, {\n      item\n    }, {\n      cache\n    }) => {\n      const {\n        cartItems\n      } = cache.readQuery({\n        query: GET_CART_ITEMS\n      });\n      const newCartItems = addItemToCart(cartItems, item);\n      cache.writeQuery({\n        query: GET_ITEM_COUNT,\n        data: {\n          itemCount: getCartItemCount(newCartItems)\n        }\n      });\n      cache.writeQuery({\n        query: GET_CART_ITEMS,\n        data: {\n          cartItems: newCartItems\n        }\n      });\n      return newCartItems;\n    }\n  }\n};","map":{"version":3,"sources":["/Users/eugene/Desktop/react/crwn-clothing/src/graphql/resolvers.js"],"names":["gql","addItemToCart","removeItemFromCart","clearItemFromCart","getCartTotal","getCartItemCount","typeDefs","GET_CART_HIDDEN","GET_CART_ITEMS","GET_ITEM_COUNT","resolvers","Mutation","toggleCartHidden","_root","_args","cache","cartHidden","readQuery","query","writeQuery","data","item","cartItems","newCartItems","itemCount"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,SACEC,aADF,EAEEC,kBAFF,EAGEC,iBAHF,EAIEC,YAJF,EAKEC,gBALF,QAMO,cANP;AAQE,OAAO,MAAMC,QAAQ,GAAGN,GAAI;;;;;;;;;;GAArB;AAYP,MAAMO,eAAe,GAAGP,GAAI;;;;GAA5B;AAMA,MAAMQ,cAAc,GAAGR,GAAI;;;;GAA3B;AAMA,MAAMS,cAAc,GAAGT,GAAI;;;;GAA3B;AAMA,OAAO,MAAMU,SAAS,GAAG;AACvBC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBAAgB,EAAE,CAACC,KAAD,EAAQC,KAAR,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAA6B;AAC7C,YAAM;AAAEC,QAAAA;AAAF,UAAiBD,KAAK,CAACE,SAAN,CAAgB;AACrCC,QAAAA,KAAK,EAAEX;AAD8B,OAAhB,CAAvB;AAIAQ,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAEX,eADQ;AAEfa,QAAAA,IAAI,EAAE;AAAEJ,UAAAA,UAAU,EAAE,CAACA;AAAf;AAFS,OAAjB;AAKA,aAAO,CAACA,UAAR;AACD,KAZO;AAcRf,IAAAA,aAAa,EAAE,CAACY,KAAD,EAAQ;AAACQ,MAAAA;AAAD,KAAR,EAAgB;AAACN,MAAAA;AAAD,KAAhB,KAA4B;AACzC,YAAM;AAAEO,QAAAA;AAAF,UAAgBP,KAAK,CAACE,SAAN,CAAgB;AACpCC,QAAAA,KAAK,EAAEV;AAD6B,OAAhB,CAAtB;AAIA,YAAMe,YAAY,GAAGtB,aAAa,CAACqB,SAAD,EAAYD,IAAZ,CAAlC;AAEAN,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAET,cADQ;AAEfW,QAAAA,IAAI,EAAE;AAAEI,UAAAA,SAAS,EAAEnB,gBAAgB,CAACkB,YAAD;AAA7B;AAFS,OAAjB;AAKAR,MAAAA,KAAK,CAACI,UAAN,CAAiB;AACfD,QAAAA,KAAK,EAAEV,cADQ;AAEfY,QAAAA,IAAI,EAAE;AAAEE,UAAAA,SAAS,EAAEC;AAAb;AAFS,OAAjB;AAKA,aAAOA,YAAP;AACD;AAhCO;AADa,CAAlB","sourcesContent":["import { gql } from 'apollo-boost';\n\nimport {\n  addItemToCart,\n  removeItemFromCart,\n  clearItemFromCart,\n  getCartTotal,\n  getCartItemCount\n} from './cart.utils';\n\n  export const typeDefs = gql`\n    \n    extend type Item{\n      quantity: Int\n    }\n\n    extend type Mutation {\n      ToggleCartHidden: Boolean!\n      AddItemToCart(item: Item!): [Item]!\n    }\n  `;\n  \n  const GET_CART_HIDDEN = gql`\n    {\n      cartHidden @client\n    }\n  `;\n\n  const GET_CART_ITEMS = gql`\n  {\n    cartItems @client\n  }\n  `;\n\n  const GET_ITEM_COUNT = gql`\n  {\n    itemCount @client\n  }\n  `;\n  \n  export const resolvers = {\n    Mutation: {\n      toggleCartHidden: (_root, _args, { cache }) => {\n        const { cartHidden } = cache.readQuery({\n          query: GET_CART_HIDDEN\n        });\n  \n        cache.writeQuery({\n          query: GET_CART_HIDDEN,\n          data: { cartHidden: !cartHidden }\n        });\n  \n        return !cartHidden;\n      },\n\n      addItemToCart: (_root, {item}, {cache}) => {\n        const { cartItems } = cache.readQuery({\n          query: GET_CART_ITEMS\n        });\n\n        const newCartItems = addItemToCart(cartItems, item);\n\n        cache.writeQuery({\n          query: GET_ITEM_COUNT,\n          data: { itemCount: getCartItemCount(newCartItems) }\n        });\n\n        cache.writeQuery({\n          query: GET_CART_ITEMS,\n          data: { cartItems: newCartItems }\n        });\n\n        return newCartItems;\n      }\n    }\n  };"]},"metadata":{},"sourceType":"module"}